package golem

import (
  "os"
  "time"
)

#import "macros.gpp"

@func "file-exists?" 1 1 {
  @arg path 0 Str
  @try _  , err := os.Stat(string(path))
  return T
}

@func "dir-exists?" 1 1 {
  @arg path 0 Str
  @try stat, err := os.Stat(string(path))
  if stat.IsDir() {
    return T
  }
  return Nil
}

@func "delete-file" 1 1 {
  @arg path 0 Str
  @try err := os.Remove(string(path))
  return T
}

@func "args" 0 0 {
  res := []Value{}
  for arg := range os.Args {
    res = append(args, Str(arg))
  }
  return Vec(res)
}

@func "exit" 1 1 {
  @arg status 0 Int
  os.Exit(int(status))
  return Nil
}

@func "getenv" 1 1 {
  @arg key 0 Str
  return Str(os.Getenv(string(key)))
}

@func "time" 0 0 {
  return Int(time.Now().UnixNano())
}
