package golem

#import "macros.gpp"

type Iterable interface {
  Value
  Length() int
  Ref(int) Value
  SetRef(int, Value)
  Slice(int, int) Iterable
}

@type_predicate "iterable?" Iterable

@func "len" 1 1 {
  @arg iter 0 Iterable
  return Int(iter.Length())
}

@func "slice" 3 3 {
  @arg iter 0 Iterable
  @arg start 1 Int
  @arg end 2 Int
  return iter.Slice(int(start), int(end))
}

@func "nth" 2 2 {
  @arg iter 0 Iterable
  @arg idx 1 Int
  return iter.Ref(int(idx))
}

@func "nth=" 3 3 {
  @arg iter 0 Iterable
  @arg idx 1 Int
  @arg val 2 Value
  iter.SetRef(int(idx), val)
  return val
}
