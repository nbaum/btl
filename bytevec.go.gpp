package golem

import (
  "fmt"
)

type ByteVec []byte

func (v ByteVec) String() string {
  return fmt.Sprint([]byte(v))
}

func (v ByteVec) Type() Value {
  return Intern("array")
}

func (v ByteVec) First() Value {
  return Int(v[0])
}

func (v ByteVec) Empty() bool {
  return len(v) == 0
}

func (v ByteVec) Length() int {
  return len(v)
}

#import "macros.gpp"

@func "bvec?" 1 1 {
  if @is_a(args[0], Vec) {
    return T
  }
  return Nil
}

@func "make-bvec" 1 1 {
  @arg len 0 Int
  return ByteVec(make([]byte, int(len)))
}
